package edu.kit.ipd.sdq.kamp4attack.core.changepropagation.changes;

import java.util.List;

import org.palladiosimulator.pcm.confidentiality.attacker.analysis.common.data.DataHandlerAttacker;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.AttackVector;

import edu.kit.ipd.sdq.kamp4attack.core.BlackboardWrapper;
import edu.kit.ipd.sdq.kamp4attack.core.changepropagation.attackhandlers.AssemblyContextHandler;
import edu.kit.ipd.sdq.kamp4attack.core.changepropagation.attackhandlers.ResourceContainerHandler;
import edu.kit.ipd.sdq.kamp4attack.core.changepropagation.attackhandlers.vulnerability.AssemblyContextVulnerability;
import edu.kit.ipd.sdq.kamp4attack.core.changepropagation.attackhandlers.vulnerability.LinkingResourceVulnerability;
import edu.kit.ipd.sdq.kamp4attack.core.changepropagation.attackhandlers.vulnerability.ResourceContainerVulnerability;
import edu.kit.ipd.sdq.kamp4attack.model.modificationmarks.KAMP4attackModificationmarks.CredentialChange;

public class LinkingPropagationVulnerability extends LinkingChange {

    public LinkingPropagationVulnerability(final BlackboardWrapper v) {
        super(v);
    }

    @Override
    public void calculateLinkingResourceToContextPropagation(final CredentialChange changes) {
        super.calculateLinkingResourceToContextPropagation(changes);
        var linkingResources = this.getCompromisedLinkingResources(changes);
        var linkingHandler = new LinkingResourceVulnerability(modelStorage, new DataHandlerAttacker(getAttacker()), AttackVector.LOCAL);
        for(var linking : linkingResources) {
            linkingHandler.attackLinkingResource(List.of(linking), changes, linking);
        }

    }
    @Override
    protected ResourceContainerHandler getResourceContainerHandler() {
        return new ResourceContainerVulnerability(this.modelStorage, new DataHandlerAttacker(this.getAttacker()),
                AttackVector.ADJACENT_NETWORK);
    }

    @Override
    protected AssemblyContextHandler getAssemblyContextHandler() {
        return new AssemblyContextVulnerability(this.modelStorage, new DataHandlerAttacker(this.getAttacker()),
                AttackVector.ADJACENT_NETWORK);
    }

}
