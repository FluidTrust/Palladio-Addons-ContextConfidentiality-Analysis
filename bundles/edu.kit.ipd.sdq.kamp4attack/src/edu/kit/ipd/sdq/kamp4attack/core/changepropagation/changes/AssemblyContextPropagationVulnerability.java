package edu.kit.ipd.sdq.kamp4attack.core.changepropagation.changes;

import org.palladiosimulator.pcm.confidentiality.attacker.analysis.common.data.DataHandlerAttacker;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.AttackVector;

import edu.kit.ipd.sdq.kamp4attack.core.BlackboardWrapper;
import edu.kit.ipd.sdq.kamp4attack.core.changepropagation.attackhandlers.AssemblyContextHandler;
import edu.kit.ipd.sdq.kamp4attack.core.changepropagation.attackhandlers.LinkingResourceHandler;
import edu.kit.ipd.sdq.kamp4attack.core.changepropagation.attackhandlers.ResourceContainerHandler;
import edu.kit.ipd.sdq.kamp4attack.core.changepropagation.attackhandlers.vulnerability.AssemblyContextVulnerability;
import edu.kit.ipd.sdq.kamp4attack.core.changepropagation.attackhandlers.vulnerability.LinkingResourceVulnerability;
import edu.kit.ipd.sdq.kamp4attack.core.changepropagation.attackhandlers.vulnerability.ResourceContainerVulnerability;

public class AssemblyContextPropagationVulnerability extends AssemblyContextChange {

    public AssemblyContextPropagationVulnerability(final BlackboardWrapper v) {
        super(v);
    }

    @Override
    protected ResourceContainerHandler getResourceHandler() {
        return new ResourceContainerVulnerability(this.modelStorage, new DataHandlerAttacker(this.getAttacker()),
                AttackVector.LOCAL);
    }

    @Override
    protected AssemblyContextHandler getAssemblyHandler() {
        return new AssemblyContextVulnerability(this.modelStorage, new DataHandlerAttacker(this.getAttacker()),
                AttackVector.ADJACENT_NETWORK);
    }

    @Override
    protected LinkingResourceHandler getLinkingHandler() {
        return new LinkingResourceVulnerability(this.modelStorage, new DataHandlerAttacker(this.getAttacker()), AttackVector.ADJACENT_NETWORK);
    }

}
