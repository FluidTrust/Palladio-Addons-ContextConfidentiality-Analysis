package edu.kit.ipd.sdq.attacksurface.core.changepropagation.changes;

import org.palladiosimulator.pcm.confidentiality.attacker.analysis.common.data.DataHandlerAttacker;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.AttackVector;

import edu.kit.ipd.sdq.attacksurface.core.changepropagation.attackhandlers.AssemblyContextHandler;
import edu.kit.ipd.sdq.attacksurface.core.changepropagation.attackhandlers.ResourceContainerHandler;
import edu.kit.ipd.sdq.attacksurface.core.changepropagation.attackhandlers.vulnerability.AssemblyContextVulnerability;
import edu.kit.ipd.sdq.attacksurface.core.changepropagation.attackhandlers.vulnerability.ResourceContainerVulnerability;
import edu.kit.ipd.sdq.attacksurface.graph.AttackGraph;
import edu.kit.ipd.sdq.kamp4attack.core.BlackboardWrapper;
import edu.kit.ipd.sdq.kamp4attack.model.modificationmarks.KAMP4attackModificationmarks.CredentialChange;

public class ResourceContainerPropagationVulnerability extends ResourceContainerChange {
    public ResourceContainerPropagationVulnerability(final BlackboardWrapper v, final CredentialChange change, 
            final AttackGraph attackGraph) {
        super(v, change, attackGraph);
    }

    @Override
    protected ResourceContainerHandler getResourceHandler() {
        return new ResourceContainerVulnerability(this.modelStorage, new DataHandlerAttacker(this.changes),
                AttackVector.ADJACENT_NETWORK, getAttackGraph());
    }

    @Override
    protected AssemblyContextHandler getAssemblyHandler() {
        return new AssemblyContextVulnerability(this.modelStorage, new DataHandlerAttacker(this.changes),
                AttackVector.ADJACENT_NETWORK, getAttackGraph());
    }
}
