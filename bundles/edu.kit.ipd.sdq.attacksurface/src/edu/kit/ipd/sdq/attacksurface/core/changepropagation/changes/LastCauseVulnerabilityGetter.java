package edu.kit.ipd.sdq.attacksurface.core.changepropagation.changes;

import java.util.stream.Collectors;

import org.eclipse.emf.common.util.EList;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.Vulnerability;
import org.palladiosimulator.pcm.core.entity.Entity;

import edu.kit.ipd.sdq.kamp.model.modificationmarks.AbstractModification;
import edu.kit.ipd.sdq.kamp4attack.model.modificationmarks.KAMP4attackModificationmarks.CredentialChange;

public interface LastCauseVulnerabilityGetter {
    CredentialChange getChanges();
    
    default String getLastCauseId(final Entity affectedElement) { //TODO does not work yet
        final var listOfIds = getChanges().getCompromisedassembly()
                    .stream()
                    .filter(a -> a.getAffectedElement().getId().equals(affectedElement.getId()))
                    .map(AbstractModification::getCausingElements)
                    .flatMap(EList::stream)
                    .filter(Vulnerability.class::isInstance)
                    .map(v -> ((Vulnerability)v).getId())
                    .collect(Collectors.toList());
        if (!listOfIds.isEmpty()) {
            return listOfIds.get(listOfIds.size() - 1);
        }
        return null;
    }
}
